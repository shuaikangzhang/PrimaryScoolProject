<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 导入外部文件 -->
    <context:property-placeholder location="classpath:config/db.properties"/> 
    <!-- 阿里 druid 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <!-- 数据库基本信息配置 -->  
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 打开监控统计功能 -->
        <property name="filters" value="${druid.filters}" />
        <!-- 最大并发连接数 --> 
        <property name="maxActive" value="${druid.maxActive}" />
        <!-- 初始化连接数量 -->  
        <property name="initialSize" value="${druid.initialSize}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${druid.maxWait}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${druid.minIdle}" />
    </bean>

    <!--定义了Hibernate的SessionFactory  -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.primaryschool.**.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.fetch_size">50</prop>
                <prop key="hibernate.batch_size">50</prop>
                <prop key="current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>
    
    <!--  Hibernate事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"/>  
    </bean>  
    
    
   <!--   配置事务拦截器-->
     <bean id="transactionInterceptor"
          class="org.springframework.transaction.interceptor.TransactionInterceptor">
          <!-- 事务拦截器bean需要依赖注入一个事务管理器 -->
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
              <!-- 下面定义事务传播属性 -->
            <props>
                <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="get*">PROPAGATION_NEVER</prop>
                <prop key="find*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>  
                <prop key="modify*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
            </props>
        </property>
    </bean>
    
    <!-- 自动创建事务代理  -->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
       <!--  指定对满足哪些bean name的bean自动生成业务代理 --> 
        <property name="beanNames">
            <!-- 下面是所有需要自动创建事务代理的bean -->
            <list>
                <value>*Dao</value>
                <value>*Service</value>
               
            </list>
        </property>
        <!-- 下面定义BeanNameAutoProxyCreator所需的事务拦截器 -->
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>
    
</beans>